import * as React from "react";
import { Timeline, Tween } from "react-gsap";

const TargetWithNames = React.forwardRef((props, targets: any) => (
  <g id="scroll component">
    <rect
      ref={rect => targets.set("mouseOutline", rect)}
      id="mouse-border"
      x="9.5"
      y="0.5"
      width="46"
      height="81"
      rx="23"
      stroke="#00548C"
    />
    <circle
      ref={circle => targets.set("dotCircle", circle)}
      id="dot"
      cx="32"
      cy="13"
      r="3"
      fill="#00548C"
    />
  </g>
));

const Scroll = () => {
  return (
    <svg
      width="65"
      height="111"
      viewBox="0 0 65 111"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <Timeline repeat={-1} target={<TargetWithNames />}>
        <Tween
          to={{ y: "65" }}
          target="dotCircle"
          position="0"
          ease="bounce.out"
          duration={1.5}
        />
        <Tween to={{ display: "none" }} target="dotCircle" position="1" />
        <Tween to={{ stroke: "#D62A5E" }} target="mouseOutline" position="2" />
        <Tween to={{ stroke: "#00548C" }} target="mouseOutline" position="3" />
        <Tween to={{ y: "-10" }} target="dotCircle" position="2" />
        <Tween
          to={{ y: "0", display: "flex" }}
          target="dotCircle"
          position="4"
          ease="ease.out"
        />
      </Timeline>
      <Tween to={{ opacity: 0 }} yoyo repeat={-1} duration={0.5}>
        <path
          id="scrollText"
          d="M8.85938 103.854C8.85938 103.145 8.61035 102.585 8.1123 102.175C7.61426 101.759 6.70312 101.366 5.37891 100.997C4.05469 100.622 3.08789 100.215 2.47852 99.7754C1.61133 99.1543 1.17773 98.3398 1.17773 97.332C1.17773 96.3535 1.5791 95.5596 2.38184 94.9502C3.19043 94.335 4.22168 94.0273 5.47559 94.0273C6.3252 94.0273 7.08398 94.1914 7.75195 94.5195C8.42578 94.8477 8.94727 95.3047 9.31641 95.8906C9.68555 96.4766 9.87012 97.1299 9.87012 97.8506H8.78027C8.78027 96.9775 8.48145 96.2773 7.88379 95.75C7.28613 95.2168 6.4834 94.9502 5.47559 94.9502C4.49707 94.9502 3.71777 95.1699 3.1377 95.6094C2.55762 96.043 2.26758 96.6113 2.26758 97.3145C2.26758 97.9648 2.52832 98.4951 3.0498 98.9053C3.57129 99.3154 4.40625 99.6787 5.55469 99.9951C6.70312 100.306 7.57324 100.631 8.16504 100.971C8.75684 101.305 9.20215 101.706 9.50098 102.175C9.7998 102.644 9.94922 103.197 9.94922 103.836C9.94922 104.844 9.54492 105.652 8.73633 106.262C7.93359 106.871 6.87305 107.176 5.55469 107.176C4.65234 107.176 3.82324 107.015 3.06738 106.692C2.31738 106.37 1.74609 105.919 1.35352 105.339C0.966797 104.759 0.773438 104.094 0.773438 103.344H1.85449C1.85449 104.246 2.19141 104.958 2.86523 105.479C3.53906 106.001 4.43555 106.262 5.55469 106.262C6.55078 106.262 7.35059 106.042 7.9541 105.603C8.55762 105.163 8.85938 104.58 8.85938 103.854ZM21.3486 103.01C21.2021 104.357 20.7188 105.389 19.8984 106.104C19.084 106.818 17.9971 107.176 16.6377 107.176C15.6885 107.176 14.8477 106.938 14.1152 106.464C13.3887 105.989 12.8262 105.318 12.4277 104.451C12.0293 103.578 11.8271 102.582 11.8213 101.463V99.8018C11.8213 98.665 12.0205 97.6572 12.4189 96.7783C12.8174 95.8994 13.3887 95.2227 14.1328 94.748C14.8828 94.2676 15.7441 94.0273 16.7168 94.0273C18.0879 94.0273 19.1689 94.3994 19.96 95.1436C20.7568 95.8818 21.2197 96.9043 21.3486 98.2109H20.2588C19.9893 96.0371 18.8086 94.9502 16.7168 94.9502C15.5566 94.9502 14.6309 95.3838 13.9395 96.251C13.2539 97.1182 12.9111 98.3164 12.9111 99.8457V101.41C12.9111 102.887 13.2451 104.064 13.9131 104.943C14.5869 105.822 15.4951 106.262 16.6377 106.262C17.7686 106.262 18.6211 105.992 19.1953 105.453C19.7695 104.908 20.124 104.094 20.2588 103.01H21.3486ZM28.7578 101.674H25.04V107H23.9502V94.2031H28.1074C29.4727 94.2031 30.5391 94.5342 31.3066 95.1963C32.0742 95.8584 32.458 96.7842 32.458 97.9736C32.458 98.7939 32.2178 99.5176 31.7373 100.145C31.2568 100.771 30.6123 101.205 29.8037 101.445L33.0029 106.886V107H31.8516L28.7578 101.674ZM25.04 100.751H28.3535C29.2617 100.751 29.9912 100.493 30.542 99.9775C31.0928 99.4619 31.3682 98.7939 31.3682 97.9736C31.3682 97.0713 31.0811 96.3711 30.5068 95.873C29.9326 95.375 29.127 95.126 28.0898 95.126H25.04V100.751ZM44.8594 101.296C44.8594 102.474 44.6543 103.508 44.2441 104.398C43.8398 105.289 43.2598 105.975 42.5039 106.455C41.748 106.936 40.875 107.176 39.8848 107.176C38.3906 107.176 37.1836 106.643 36.2637 105.576C35.3438 104.504 34.8838 103.06 34.8838 101.243V99.9248C34.8838 98.7588 35.0889 97.7275 35.499 96.8311C35.915 95.9287 36.501 95.2373 37.2568 94.7568C38.0127 94.2705 38.8828 94.0273 39.8672 94.0273C40.8516 94.0273 41.7188 94.2646 42.4688 94.7393C43.2246 95.2139 43.8076 95.8848 44.2178 96.752C44.6279 97.6191 44.8418 98.624 44.8594 99.7666V101.296ZM43.7783 99.9072C43.7783 98.3662 43.4297 97.1592 42.7324 96.2861C42.0352 95.4131 41.0801 94.9766 39.8672 94.9766C38.6777 94.9766 37.7285 95.416 37.0195 96.2949C36.3164 97.168 35.9648 98.3896 35.9648 99.96V101.296C35.9648 102.813 36.3164 104.018 37.0195 104.908C37.7227 105.793 38.6777 106.235 39.8848 106.235C41.1094 106.235 42.0645 105.799 42.75 104.926C43.4355 104.047 43.7783 102.825 43.7783 101.261V99.9072ZM48.6738 106.086H54.9932V107H47.584V94.2031H48.6738V106.086ZM58.166 106.086H64.4854V107H57.0762V94.2031H58.166V106.086Z"
          fill="#00548C"
        />
      </Tween>
    </svg>
  );
};

export default Scroll;
